@model Sale.Models.Order
@{
    ViewBag.Title = "UpdateOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>修改訂單</h1>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table class="table table-bordered">
            <tr>
                <td>@Html.LabelFor(model => model.OrderId)</td>
                <td colspan="3">
                    @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.OrderId, @readonly = true, @type = "text" } })
                    @Html.ValidationMessageFor(model => model.OrderId)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.CustName)
                </td>
                <td colspan="3">
                    @Html.DropDownList("CustId", (List<SelectListItem>)ViewBag.CustCodeData)
                    @Html.ValidationMessageFor(model => model.CustId)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.EmpName)</td>
                <td>
                    @Html.DropDownList("EmpId", (List<SelectListItem>)ViewBag.EmpCodeData)
                    @Html.ValidationMessageFor(model => model.EmpId)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Orderdate)</td>
                <td>
                    @Html.TextBoxFor(model => model.Orderdate, new { @type = "date", @Value = ViewBag.Orderdate})
                    @Html.ValidationMessageFor(model => model.Orderdate)
                </td>
                <td>@Html.LabelFor(model => model.RequireDdate)</td>
                <td>
                    @Html.TextBoxFor(model => model.RequireDdate, new { @type = "date", @Value = ViewBag.RequireDdate})
                    @Html.ValidationMessageFor(model => model.RequireDdate)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShippedDate)</td>
                <td>
                    @Html.TextBoxFor(model => model.ShippedDate, new { @type = "date" , @Value = ViewBag.ShippedDate})
                    @Html.ValidationMessageFor(model => model.ShippedDate)
                </td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipperName)</td>
                <td>
                    @Html.DropDownList("ShipperId", (List<SelectListItem>)ViewBag.ShipCodeData)
                    @Html.ValidationMessageFor(model => model.ShipperId)
                </td>
                <td>@Html.LabelFor(model => model.Freight)</td>
                <td>
                    @Html.EditorFor(model => model.Freight, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.Freight } })
                    @Html.ValidationMessageFor(model => model.Freight)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipCountry)</td>
                <td>
                    @Html.EditorFor(model => model.ShipCountry, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipCountry } })
                    @Html.ValidationMessageFor(model => model.ShipCountry)
                </td>
                <td>@Html.LabelFor(model => model.ShipCity)</td>
                <td>
                    @Html.EditorFor(model => model.ShipCity, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipCity } })
                    @Html.ValidationMessageFor(model => model.ShipCity)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipRegion)</td>
                <td>
                    @Html.EditorFor(model => model.ShipRegion, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipRegion } })
                    @Html.ValidationMessageFor(model => model.ShipRegion)
                </td>
                <td>@Html.LabelFor(model => model.ShipPostalCode)</td>
                <td>
                    @Html.EditorFor(model => model.ShipPostalCode, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipPostalCode } })
                    @Html.ValidationMessageFor(model => model.ShipPostalCode)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipAddress)</td>
                <td>
                    @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipAddress } })
                    @Html.ValidationMessageFor(model => model.ShipAddress)
                </td>
                <td>@Html.LabelFor(model => model.ShipName)</td>
                <td>
                    @Html.EditorFor(model => model.ShipName, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipName } })
                    @Html.ValidationMessageFor(model => model.ShipName)
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input type="submit" value="存檔" />
                    @Html.ActionLink("回前一頁", "Index")
                </td>
                <td></td>
                <td></td>
            </tr>
        </table>

        <a id="addNewDetial" href="#">新增一筆</a>
        <table class="table table-bordered">
            <tr>
                <td>商品</td>
                <td>單價</td>
                <td>數量</td>
                <td>小計</td>
                <td></td>
            </tr>
            <tbody id="tbContent">

                @for (int i = 0; i < Model.OrderDetails.Count; i++)
                {
                    <tr>
                        <td>@Html.DropDownListFor(m => Model.OrderDetails[i].ProductId, (List<SelectListItem>)ViewBag.ProductCodeData, new { @class = "ProductId" })</td>
                        <td>@Html.TextBoxFor(m => Model.OrderDetails[i].UnitPrice, new { @class = "UnitPrice", @onchange = "onchangeValue(this)", Type = "number" })</td>
                        <td>@Html.TextBoxFor(m => Model.OrderDetails[i].Qty, new { @class = "Qty", @onchange = "onchangeValue(this)", Type = "number" })</td>
                        <td></td>
                        <td>@Html.TextBoxFor(m => Model.OrderDetails[0].ProductName, new { @class = "ProductName", @type = "hidden", @Value = "" })
                        <button type="button" class="btnRemove">刪除</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
